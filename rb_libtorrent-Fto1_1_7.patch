diff -Naur a/ChangeLog b/ChangeLog
--- a/ChangeLog	2017-12-29 21:54:19.000000000 +0700
+++ b/ChangeLog	2018-01-18 12:21:14.417816558 +0700
@@ -1,4 +1,8 @@
 
+	* fix tracker connection bind issue for IPv6 trackers
+	* fix error handling of some merkle torrents
+	* fix error handling of unsupported hard-links
+
 1.1.6 release
 
 	* deprecate save_encryption_settings (they are part of the normal settings)
diff -Naur a/src/create_torrent.cpp b/src/create_torrent.cpp
--- a/src/create_torrent.cpp	2017-12-12 05:59:29.000000000 +0700
+++ b/src/create_torrent.cpp	2018-01-18 12:20:58.965746976 +0700
@@ -332,16 +332,20 @@
 		// a piece_size of 0 means automatic
 		if (piece_size == 0 && !m_merkle_torrent)
 		{
-			const int target_size = 40 * 1024;
-			piece_size = int(fs.total_size() / (target_size / 20));
+			// size_table is computed from the following:
+			//   target_list_size = sqrt(total_size) * 2;
+			//   target_piece_size = total_size / (target_list_size / hash_size);
+			// Given hash_size = 20 bytes, target_piece_size = (16*1024 * pow(2, i))
+			// we can determine size_table = (total_size = pow(2 * target_piece_size / hash_size, 2))
+			boost::int64_t const size_table[] = {2684355, 10737418, 42949673, 171798692, 687194767,
+				2748779069LL, 10995116278LL, 43980465111LL, 175921860444LL, 703687441777LL};
 
-			int i = 16*1024;
-			for (; i < 2*1024*1024; i *= 2)
+			int i = 0;
+			for (int max = sizeof(size_table) / sizeof(size_table[0]); i < max; ++i)
 			{
-				if (piece_size > i) continue;
-				break;
+				if (size_table[i] >= fs.total_size()) break;
 			}
-			piece_size = i;
+			piece_size = 0x4000 << i;
 		}
 		else if (piece_size == 0 && m_merkle_torrent)
 		{
diff -Naur a/src/file.cpp b/src/file.cpp
--- a/src/file.cpp	2017-12-12 05:59:32.000000000 +0700
+++ b/src/file.cpp	2018-01-18 12:21:04.098770090 +0700
@@ -568,7 +568,7 @@
 		// most errors are passed through, except for the ones that indicate that
 		// hard links are not supported and require a copy.
 		// TODO: 2 test this on a FAT volume to see what error we get!
-		if (errno != EMLINK || errno != EXDEV)
+		if (errno != EMLINK && errno != EXDEV)
 		{
 			// some error happened, report up to the caller
 			ec.assign(errno, system_category());
diff -Naur a/src/session_impl.cpp b/src/session_impl.cpp
--- a/src/session_impl.cpp	2017-12-28 22:54:12.000000000 +0700
+++ b/src/session_impl.cpp	2018-01-18 12:21:14.419816566 +0700
@@ -1332,7 +1332,11 @@
 		}
 #endif
 
-		if (!req.bind_ip) req.bind_ip = m_listen_interface.address();
+		if (!req.bind_ip
+			&& m_listen_interface.address() != address_v4::any())
+		{
+			req.bind_ip = m_listen_interface.address();
+		}
 		m_tracker_manager.queue_request(get_io_service(), req, c);
 	}
 
diff -Naur a/src/torrent_info.cpp b/src/torrent_info.cpp
--- a/src/torrent_info.cpp	2017-12-12 05:59:32.000000000 +0700
+++ b/src/torrent_info.cpp	2018-01-18 12:21:09.025792277 +0700
@@ -1258,8 +1258,15 @@
 				m_files.set_piece_length(0);
 				return false;
 			}
-			int num_leafs = merkle_num_leafs(files.num_pieces());
-			int num_nodes = merkle_num_nodes(num_leafs);
+			if (files.num_pieces() <= 0)
+			{
+				ec = errors::no_files_in_torrent;
+				// mark the torrent as invalid
+				m_files.set_piece_length(0);
+				return false;
+			}
+			int const num_leafs = merkle_num_leafs(files.num_pieces());
+			int const num_nodes = merkle_num_nodes(num_leafs);
 			if (num_nodes - num_leafs >= (2<<24))
 			{
 				ec = errors::too_many_pieces_in_torrent;
diff -Naur a/test/Makefile.am b/test/Makefile.am
--- a/test/Makefile.am	2017-12-12 05:59:32.000000000 +0700
+++ b/test/Makefile.am	2018-01-18 12:21:09.026792281 +0700
@@ -70,6 +70,7 @@
   test_torrents/httpseed.torrent \
   test_torrents/invalid_file_size.torrent \
   test_torrents/invalid_info.torrent \
+  test_torrents/invalid_merkle.torrent \
   test_torrents/invalid_name.torrent \
   test_torrents/invalid_name2.torrent \
   test_torrents/invalid_name3.torrent \
diff -Naur a/test/test_torrent_info.cpp b/test/test_torrent_info.cpp
--- a/test/test_torrent_info.cpp	2017-12-12 05:59:32.000000000 +0700
+++ b/test/test_torrent_info.cpp	2018-01-18 12:21:09.026792281 +0700
@@ -161,6 +161,7 @@
 	{ "unaligned_pieces.torrent", errors::torrent_invalid_hashes },
 	{ "invalid_root_hash.torrent", errors::torrent_invalid_hashes },
 	{ "invalid_root_hash2.torrent", errors::torrent_missing_pieces },
+	{ "invalid_merkle.torrent", errors::no_files_in_torrent},
 	{ "invalid_file_size.torrent", errors::torrent_invalid_length },
 	{ "invalid_symlink.torrent", errors::torrent_invalid_name },
 };
diff -Naur a/test/test_torrents/invalid_merkle.torrent b/test/test_torrents/invalid_merkle.torrent
--- a/test/test_torrents/invalid_merkle.torrent	1970-01-01 07:00:00.000000000 +0700
+++ b/test/test_torrents/invalid_merkle.torrent	2018-01-18 12:21:09.026792281 +0700
@@ -0,0 +1 @@
+d10:cion datei15992e4:infod6:lengthi000e4:name4:temp12:piece lengthi12e9:root hash20:‚ž¼Œ&¾ÇJW›}ÜA4u,·¼‘‡ee
